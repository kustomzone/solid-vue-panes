{"version":3,"sources":["webpack:///./src/mixins/profileMixin.js","webpack:///./src/components/inbox/Inbox.vue?6321","webpack:///src/components/inbox/Inbox.vue","webpack:///./src/components/inbox/Inbox.vue?0216","webpack:///./src/components/inbox/Inbox.vue","webpack:///./node_modules/core-js/modules/es.array.concat.js","webpack:///./src/mixins/aclMixin.js"],"names":["solid","window","methods","getProfile","webId","profile","friends","fetchDocument","profileDoc","p","getSubject","getString","vcard","fn","name","organization","role","getRef","hasAddress","addressUrl","add","locality","data","vcard$hasPhoto","photo","this","makeToast","message","getInboxUrls","inbox_urls","getAllRefs","ldp","inbox","getFriends","foaf","knows","addIndex","fullpath","classe","inst","dateObj","Date","date","toISOString","puti","$store","state","indexes","url","putiDoc","addSubject","newchat","addLiteral","rdfs","label","addNodeRef","dct","created","save","getIndexes","instances","classes","prti","subject","getNodeRef","findSubjects","puIndexes","forEach","index","instance","push","undefined","console","log","title","content","variant","$bvToast","toast","render","_vm","_h","$createElement","_c","_self","staticClass","_v","_s","attrs","on","$event","stopPropagation","init_new","_l","files","slice","reverse","m","key","trash","toTrash","send","selected","showFriends","onSelected","_e","model","value","callback","$$v","recipient","expression","_m","staticRenderFns","SolidFileClient","mixins","profileMixin","components","props","watch","reply","$bvModal","show","r","sender","storage","st","inbox_log_file","subscribe","notify","$notification","body","length","now","id","getTime","messageStr","computed","component","$","fails","isArray","isObject","toObject","toLength","createProperty","arraySpeciesCreate","arrayMethodHasSpeciesSupport","wellKnownSymbol","V8_VERSION","IS_CONCAT_SPREADABLE","MAX_SAFE_INTEGER","MAXIMUM_ALLOWED_INDEX_EXCEEDED","IS_CONCAT_SPREADABLE_SUPPORT","array","concat","SPECIES_SUPPORT","isConcatSpreadable","O","spreadable","FORCED","target","proto","forced","arg","i","k","len","E","A","n","arguments","TypeError","fc","auth","configureInbox","inbox_url","itemExists","inbox_exists","createFolder","logDoc","createDocument","s","schema","about","getSolidDatasetWithAcl","inboxtWithAcl","agentAccess","getAgentAccess","publicAccess","getPublicAccess","alert","inbox_log_file_exists","hasResourceAcl","hasAccessibleAcl","Error","hasFallbackAcl","resourceAcl","createAclFromFallbackAcl","getResourceAcl","updatedAgentResourceAccess","setAgentResourceAccess","read","append","write","control","updatedAgentDefaultAccess","setAgentDefaultAccess","updatedPublicResourceAccess","setPublicResourceAccess","updatedPublicDefaultAccess","setPublicDefaultAccess","saveAclFor","logFileWithAcl","logAcl","updatedPublicLogAccess"],"mappings":"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","file":"js/chunk-e8c679c2.24d55436.js","sourcesContent":["import { fetchDocument } from 'tripledoc';\nimport { vcard, foaf, dct, rdfs, ldp } from 'rdf-namespaces'\nconst solid= window.solid\n\nexport default {\n  methods: {\n    getProfile: async function(webId){\n      let profile = {friends:[]}\n      profile.webId = webId\n      try{\n        let profileDoc = await fetchDocument(webId);\n\n        const p = profileDoc.getSubject(webId)\n\n        profile.name = await  p.getString(vcard.fn)\n\n        profile.organization = await  p.getString(\"http://www.w3.org/2006/vcard/ns#organization-name\")\n        profile.role = await  p.getString(vcard.role)\n\n        //must check if there are many addressUrl\n        let addressUrl = await  p.getRef(vcard.hasAddress)\n        //    console.log(\"Address Node \",addressUrl)\n        if (addressUrl != null){\n          let add = profileDoc.getSubject(addressUrl);\n          profile.locality = await add.getString(vcard.locality)\n        }\n        // ???  Does not work profile.photo = await p.getString(vcard.hasPhoto)\n        let photo = await solid.data.[webId].vcard$hasPhoto\n        profile.photo = `${photo}`\n      }catch(e){\n        //console.log(e)\n        this.makeToast(e.message, webId, 'warning')\n      }\n      return profile\n    },\n    getInboxUrls: async function(webId){\n      let inbox_urls = []\n      try{\n        let profileDoc = await fetchDocument(webId);\n        const p = profileDoc.getSubject(webId)\n        inbox_urls = await  p.getAllRefs(ldp.inbox )\n      }catch(e){\n        //alert(webId+\" : \"+e)\n        this.makeToast(e.message, webId, 'warning')\n      }\n      return inbox_urls\n    },\n    getFriends: async function(webId){\n      let friends = []\n      try{\n        let profileDoc = await fetchDocument(webId);\n        const p = profileDoc.getSubject(webId)\n        friends = await  p.getAllRefs(foaf.knows )\n      }catch(e){\n        //alert(webId+\" : \"+e)\n        this.makeToast(e.message, webId, 'warning')\n      }\n      return friends\n    },\n    addIndex: async function(fullpath, classe, name){\n      let inst  =  fullpath+\"/index.ttl#this\"\n      var dateObj = new Date();\n      var date = dateObj.toISOString()\n\n      //      console.log(inst, classe, name, webId)\n      let puti = this.$store.state.solid.indexes.puti\n      //    console.log(puti)\n      let putiDoc = await fetchDocument(puti.url)\n      let newchat = await putiDoc.addSubject()\n      //subj.addLiteral(dct.created, date)\n      newchat.addLiteral(rdfs.label, name)\n      newchat.addNodeRef(\"http://www.w3.org/ns/solid/terms#forClass\", classe)\n      newchat.addNodeRef(\"http://www.w3.org/ns/solid/terms#instance\", inst)\n      newchat.addLiteral(dct.created, date)\n      await putiDoc.save();\n\n    },\n    getIndexes: async function(webId){\n      let indexes = {puti: {instances: [], classes: []}, prti: {instances: [], classes: []}}\n      try{\n        let profileDoc = await fetchDocument(webId);\n        const subject = profileDoc.getSubject(webId)\n\n        let puti = await  subject.getNodeRef(\"http://www.w3.org/ns/solid/terms#publicTypeIndex\" )\n        let prti = await  subject.getNodeRef(\"http://www.w3.org/ns/solid/terms#privateTypeIndex\" )\n\n        //    console.log(puti)\n        //    console.log(prti)\n        indexes.puti.url = puti\n        indexes.prti.url = prti\n        let putiDoc = await fetchDocument(puti)\n      //  let prtiDoc = await fetchDocument(prti)\n        //    console.log(putiDoc)\n        //    console.log(prtiDoc)\n        let puIndexes = await putiDoc.findSubjects(\"http://www.w3.org/ns/solid/terms#forClass\")\n      //  let prIndexes = await prtiDoc.findSubjects(\"http://www.w3.org/ns/solid/terms#forClass\")\n        //    console.log(puIndexes,prIndexes)\n\n        puIndexes.forEach( async function(index) {\n          let classe = await index.getRef(\"http://www.w3.org/ns/solid/terms#forClass\")\n          let instance = await index.getRef(\"http://www.w3.org/ns/solid/terms#instance\")\n          let created = await index.getString(dct.created)\n          let label = await index.getString(rdfs.label)\n          //    console.log(instance, classe)\n          indexes.puti.instances.push({instance: instance, classe: classe, label: label, created: created})\n          indexes.puti.classes[classe] ==  undefined ? indexes.puti.classes[classe] = [] : \"\"\n          indexes.puti.classes[classe].push(instance)\n        });\n\n      /*  prIndexes.forEach( async function(index) {\n          let classe = await index.getRef(\"http://www.w3.org/ns/solid/terms#forClass\")\n          let instance = await index.getRef(\"http://www.w3.org/ns/solid/terms#instance\")\n          let created = await index.getString(dct.created)\n          let label = await index.getString(rdfs.label)\n          //    console.log(instance, classe)\n          indexes.prti.instances.push({instance: instance, classe: classe, label: label, created: created})\n          indexes.prti.classes[classe] ==  undefined ? indexes.prti.classes[classe] = [] : \"\"\n          indexes.prti.classes[classe].push(instance)\n        });*/\n\n\n\n      }catch(e){\n        //  console.log(e)\n      }\n      console.log(webId, indexes)\n      return indexes\n    },\n    makeToast(title, content,variant = null) {\n      this.$bvToast.toast(content , {\n        title: title,\n        variant: variant,\n        solid: true\n      })\n    }\n  }\n\n\n}\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"inbox container\"},[_vm._v(\" webId : \"+_vm._s(_vm.webId)+\" \"),(_vm.webId != null)?_c('div',[_c('div',[_c('b-button-toolbar',{attrs:{\"aria-label\":\"Toolbar with button groups and dropdown menu\"}},[_c('b-button-group',{staticClass:\"mx-1\"},[_c('b-button',{staticClass:\"new\",attrs:{\"title\":\"new\",\"size\":\"sm\",\"variant\":\"success\"},on:{\"click\":function($event){$event.stopPropagation();return _vm.init_new()}}},[_c('b-icon-pencil-square',{attrs:{\"variant\":\"outline-success\"},on:{\"click\":function($event){$event.stopPropagation();return _vm.init_new()}}})],1)],1)],1)],1),_c('b-list-group',_vm._l((_vm.inbox.files.slice().reverse()),function(m){return _c('b-list-group-item',{key:m.name,staticClass:\"d-flex align-items-center\"},[_c('MessageLine',{attrs:{\"message\":m}})],1)}),1),_c('b-modal',{attrs:{\"id\":\"confirm-trash\",\"title\":\"Are you sure you want to delete\"},on:{\"ok\":_vm.trash}},[_vm._v(\" \"+_vm._s(_vm.toTrash)+\" \")]),_c('b-modal',{attrs:{\"id\":\"send-modal\",\"title\":_vm.title},on:{\"ok\":_vm.send,\"cancel\":function($event){_vm.selected = []}}},[_c('div',{staticClass:\"container flush\"},[(_vm.showFriends == true)?_c('FriendsSelection',{on:{\"selected\":_vm.onSelected}}):_vm._e(),_c('b-form-group',[_c('label',{attrs:{\"for\":\"destinataire\"}},[_vm._v(\"WebId :\")]),_c('b-form-input',{attrs:{\"id\":\"destinataire\",\"placeholder\":\"ex: https://spoggy-test.solid.community/profile/card#me\"},model:{value:(_vm.recipient),callback:function ($$v) {_vm.recipient=$$v},expression:\"recipient\"}})],1)],1),_c('b-list-group',[_c('b-input-group',{attrs:{\"prepend\":\"Label\"}},[_c('b-form-input',{model:{value:(_vm.label),callback:function ($$v) {_vm.label=$$v},expression:\"label\"}})],1),_c('b-form-textarea',{attrs:{\"id\":\"textarea-rows\",\"placeholder\":\"\",\"rows\":\"8\"},model:{value:(_vm.content),callback:function ($$v) {_vm.content=$$v},expression:\"content\"}})],1)],1),_vm._v(\" webId : \"+_vm._s(_vm.webId)+\" inbox_urls : \"+_vm._s(_vm.inbox_urls)+\" \"),_vm._m(0)],1):_c('div',[_c('SolidLoginButton')],1)])}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_vm._v(\"To test the inbox, you can add me to your friends :\"),_c('br'),_vm._v(\" \"),_c('a',{attrs:{\"href\":\"https://spoggy.solid.community/profile/card#me\",\"target\":\"_blank\"}},[_vm._v(\"https://spoggy.solid.community/profile/card#me\")]),_c('br')])}]\n\nexport { render, staticRenderFns }","<template>\n  <div class=\"inbox container\">\n    webId : {{ webId }}\n    <div v-if=\"webId != null\">\n\n    <div>\n      <b-button-toolbar aria-label=\"Toolbar with button groups and dropdown menu\">\n        <b-button-group class=\"mx-1\">\n          <b-button title=\"new\" class=\"new\" size=\"sm\" variant=\"success\" @click.stop=\"init_new()\">\n            <b-icon-pencil-square  @click.stop=\"init_new()\" variant=\"outline-success\"></b-icon-pencil-square>\n          </b-button>\n\n        </b-button-group>\n  </b-button-toolbar>\n</div>\n\n<b-list-group>\n  <b-list-group-item v-for=\"m in inbox.files.slice().reverse()\" :key=\"m.name\" class=\"d-flex align-items-center\">\n    <MessageLine :message=\"m\"/>\n  </b-list-group-item>\n</b-list-group>\n\n<b-modal id=\"confirm-trash\" title=\"Are you sure you want to delete\" @ok=\"trash\">\n  {{ toTrash }}\n</b-modal>\n\n<b-modal id=\"send-modal\"\n:title=\"title\"\n@ok=\"send\"\n@cancel=\"selected = []\">\n\n\n<div class=\"container flush\">\n  <FriendsSelection  v-on:selected=\"onSelected\"  v-if=\"showFriends == true\"/>\n  <b-form-group >\n\n    <label for=\"destinataire\">WebId :</label>\n    <b-form-input id=\"destinataire\" v-model=\"recipient\" placeholder=\"ex: https://spoggy-test.solid.community/profile/card#me\"></b-form-input>\n    <!--  <b-button @click=\"add\">Add</b-button> -->\n  </b-form-group>\n</div>\n\n<b-list-group>\n\n  <b-input-group prepend=\"Label\">\n    <b-form-input v-model=\"label\"></b-form-input>\n  </b-input-group>\n\n  <b-form-textarea\n  id=\"textarea-rows\"\n  placeholder=\"\"\n  v-model=\"content\"\n  rows=\"8\"\n  ></b-form-textarea>\n\n  <!--<b-list-group-item>Move</b-list-group-item>-->\n  <!--<b-list-group-item><b-icon-trash @click=\"trash\"></b-icon-trash></b-list-group-item>-->\n  <!--  <b-list-group-item>Porta ac consectetur ac</b-list-group-item>\n  <b-list-group-item>Vestibulum at eros</b-list-group-item>-->\n</b-list-group>\n</b-modal>\n\nwebId : {{ webId }}\n\ninbox_urls : {{ inbox_urls }}\n\n<p>To test the inbox, you can add me to your friends :<br> <a href=\"https://spoggy.solid.community/profile/card#me\" target=\"_blank\">https://spoggy.solid.community/profile/card#me</a><br>\n</p>\n</div>\n<div v-else>\n  <SolidLoginButton />\n</div>\n\n</div>\n</template>\n\n<script>\nimport profileMixin from '@/mixins/profileMixin'\nimport aclMixin from '@/mixins/aclMixin'\nimport auth from 'solid-auth-client';\nconst SolidFileClient = window.SolidFileClient\nconsole.log(\"SFC\", SolidFileClient)\nconst fc = new SolidFileClient(auth)\n//import { deleteFile } from \"@inrupt/solid-client\";\nimport { fetchDocument, createDocument } from 'tripledoc';\nimport { schema, space } from 'rdf-namespaces'\n//const { namedNode } = require('@rdfjs/data-model');\n\nexport default {\n  name: 'Inbox',\n  mixins: [profileMixin, aclMixin],\n  components: {\n    'MessageLine': () => import('@/components/inbox/MessageLine'),\n    'FriendsSelection': () => import('@/components/solid/FriendsSelection'),\n    'SolidLoginButton': () => import('@/components/solid/SolidLoginButton'),\n  },\n  props: ['value'],\n  data: function () {\n    return {\n      inbox_urls: [],\n      inbox: {files:[]},\n      selected: [],\n      title: \"\",\n      content: \"\",\n      label: \"\",\n      recipient: null,\n      showFriends: true\n    }\n  },\n  async created() {\n\n    this.webId = this.$store.state.solid.webId\n    console.log(\"################# created inbox webid\", this.webId)\n    if (this.webId != null){\n      this.inbox_urls = await this.getInboxUrls(this.webId)\n      this.storage = this.$store.state.solid.storage\n      await this.inbox_init(\"created webId non null\")\n      await this.configureInbox(this.inbox_urls[0], this.webId, this.storage)\n      this.inbox_log_file = this.storage+\"popock/inbox_log.ttl\"\n      console.log(\"created inbox_log_file\",this.inbox_log_file)\n      this.subscribe()\n      /*this.inbox_log_file = this.storage+\"popock/inbox_log.ttl\"\n      console.log(\"CREATED inbox_log_file\",this.inbox_log_file)\n      this.subscribe()*/\n    }else{\n      await this.inbox_init(\"created webId null\")\n    }\n\n\n\n    //  this.webId = this.$route.params.webId || this.$store.state.solid.webId\n    //  this.updateFriends()\n  },\n\n  watch: {\n\n    async webId (webId) {\n      await  this.inbox_init(\"webid watch\")\n      console.log(\"############# WEBID changed\",webId)\n      if (webId != null){\n        this.inbox_urls = await this.getInboxUrls(webId)\n      }\n\n    },\n    async inbox_urls(i_u){\n      this.current_inbox_url = i_u[0]\n      if (this.current_inbox_url != null){\n        console.log(this.current_inbox_url)\n        this.getMessages()\n\n      }\n    },\n    reply(r){\n      console.log(\"reply\",r)\n      this.showFriends = false\n      this.$bvModal.show(\"send-modal\")\n      this.selected = []\n      this.recipient = r.sender\n      this.label = \"ref: \"+r.label\n    },\n    storage(st){\n      if (st != null){\n        this.inbox_log_file = st+\"popock/inbox_log.ttl\"\n        console.log(\"STORAGE WATCH inbox_log_file\",this.inbox_log_file)\n        this.subscribe()\n      }\n    }\n  },\n  methods:{\n    async inbox_init(parent){\n      console.log(\"###################################### INBOX INIT from \",parent)\n      console.log(\"INIT WITH\",this.webId, this.inbox_urls[0],  this.storage)\n    },\n    notify (message= 'This is an example!') {\n      // https://developer.mozilla.org/en-US/docs/Web/API/Notification/Notification#Parameters\n      this.$notification.show('Hello World', {\n        body: message\n      }, {})\n    },\n    send(){\n      console.log(this.title, this.content, this.selected, this.label, this.recipient)\n      if (this.recipient != null){\n        this.selected.push(this.recipient)\n      }\n\n      console.log(\"selected\",this.selected)\n      if (this.content.length > 0){\n        let message = {}\n        //\n        message.date = new Date(Date.now())\n        message.id = message.date.getTime()\n        message.sender = this.webId\n\n        message.content = this.content\n        message.label = this.label\n\n        let messageStr = `\n        @prefix : <#>.\n        @prefix schem: <http://schema.org/>.\n        @prefix sch: <https://schema.org/>.\n        @prefix rd: <http://www.w3.org/2000/01/rdf-schema#>.\n\n        <>\n        a sch:Message;\n        schem:dateSent \"${message.date.toISOString()}\";\n        schem:sender <${message.sender}>;\n        schem:text \"${message.content}\";\n        rd:label \"${message.label}\";\n        schem:abstract \"this message can be opened with inbox of Popock https://scenaristeur.github.io/solid-vue-panes/\".\n        `\n        console.log(messageStr)\n        /*\n        if (this.r_inbox!= undefined && this.r_inbox.length > 0){\n        this.selected.push( this.r_inbox[0])\n      }*/\n\n      let getInboxUrls = this.getInboxUrls\n\n      console.log(this.selected)\n      this.selected.forEach(async function(webId) {\n        let inbox_urls = await getInboxUrls(webId)\n        if (inbox_urls != undefined && inbox_urls.length > 0){\n          console.log(\"INBOX\",inbox_urls)\n          message.url = inbox_urls[0]+message.id+\".ttl\"\n          //  let notif = inbox_log_file+\"#\"+message.id\n          console.log(message.url)\n\n          await fc.postFile( message.url, messageStr, \"text/turtle\")\n          //  await solid.data[notif].schema$about.add(namedNode(message.url))\n\n          /*    let recipient_storage = await solid.data[webId].storage\n          let inbox_log_file = recipient_storage+\"popock/inbox_log.ttl\"\n          console.log(inbox_log_file)*/\n          console.log(\"find storage of \",webId)\n          //  let recipient_storage = await solid.data[webId].storage\n\n          const recipientDoc = await fetchDocument(webId);\n          const rec = await recipientDoc.getSubject(webId)\n          const recipient_storage = await rec.getNodeRef(space.storage)\n\n\n\n\n          console.log(`${recipient_storage}`)\n          let recipient_log_file = `${recipient_storage}`+\"popock/inbox_log.ttl\"\n          console.log(recipient_log_file)\n          let logDoc ={}\n          try{\n            logDoc = await fetchDocument(recipient_log_file);\n          } catch(e){\n            logDoc = await createDocument(recipient_log_file);\n          }\n\n\n          let s = logDoc.addSubject()\n          s.addNodeRef(schema.about, message.url)\n          //  console.log(logDoc)\n          await logDoc.save()\n        }\n\n      })\n\n\n    }else{\n      alert(\"content must not be empty\")\n    }\n\n  },\n  onSelected: function (selected) {\n    this.selected = selected\n    console.log(this.selected)\n  },\n  init_new(){\n    console.log(\"new\")\n    //  this.new = true\n    this.showFriends = true\n    this.$bvModal.show(\"send-modal\")\n    this.selected = []\n    this.recipient = null\n    this.label = \"\"\n    this.content = \"\"\n  },\n  async subscribe(){\n\n    var websocket = \"wss://\"+this.inbox_log_file.split('/')[2];\n    let socket = new WebSocket(websocket, ['solid.0.1.0']);\n    let inbox_log_file = this.inbox_log_file\n    socket.onopen = function() {\n\n      //      var now = d.toLocaleTimeString(app.lang)\n      this.send('sub '+inbox_log_file);\n      console.log(\"subscribe to INBOX\",websocket, inbox_log_file)\n      //  app.agent.send('Messages',  {action:\"info\", info: now+\"[souscription] \"+url});\n    }\n\n    let getMessages = this.getMessages\n    socket.onmessage = function(msg) {\n      console.log(msg)\n      if (msg.data && msg.data.slice(0, 3) === 'pub') {\n        //  app.notification(\"nouveau message Socialid\")\n        //app.openLongChat()\n        console.log(msg.data)\n        //  notification(\"new inbox message\")\n        getMessages()\n\n        //app.todayMessages()\n        //  app.agent.send(\"Flux\", {action: \"websocketMessage\", url : url})\n      }\n    };\n\n\n  },\n  async getMessages(){\n    this.inbox = await fc.readFolder(this.current_inbox_url)\n    this.notify(this.inbox.files.length+ \" messages !!!\")\n    this.$store.commit('inbox/setInbox', this.inbox)\n  },\n  async trash() {\n    console.log(this.toTrash)\n    //  await fc.deleteFile( this.toTrash, {withAcl:false})\n\n    await fc.deleteFile(\n      this.toTrash\n    );\n    console.log(\"File deleted !\");\n    const logDoc = await fetchDocument(this.inbox_log_file);\n    let s = logDoc.findSubject(schema.about, this.toTrash)\n    logDoc.removeSubject(s)\n    //s.addNodeRef(schema.about, message.url)\n    //  console.log(logDoc)\n    await logDoc.save()\n  }\n},\ncomputed:{\n  webId: {\n    get: function() { return this.$store.state.solid.webId},\n    set: function() {}\n  },\n  toTrash(){\n    return this.$store.state.inbox.toTrash\n  },\n  reply(){\n    return this.$store.state.inbox.reply\n  },\n  storage:{\n    get: function() { return this.$store.state.solid.storage},\n    set: function() {}\n\n  }\n}\n}\n</script>\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Inbox.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Inbox.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Inbox.vue?vue&type=template&id=de9c05c6&\"\nimport script from \"./Inbox.vue?vue&type=script&lang=js&\"\nexport * from \"./Inbox.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","'use strict';\nvar $ = require('../internals/export');\nvar fails = require('../internals/fails');\nvar isArray = require('../internals/is-array');\nvar isObject = require('../internals/is-object');\nvar toObject = require('../internals/to-object');\nvar toLength = require('../internals/to-length');\nvar createProperty = require('../internals/create-property');\nvar arraySpeciesCreate = require('../internals/array-species-create');\nvar arrayMethodHasSpeciesSupport = require('../internals/array-method-has-species-support');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar V8_VERSION = require('../internals/engine-v8-version');\n\nvar IS_CONCAT_SPREADABLE = wellKnownSymbol('isConcatSpreadable');\nvar MAX_SAFE_INTEGER = 0x1FFFFFFFFFFFFF;\nvar MAXIMUM_ALLOWED_INDEX_EXCEEDED = 'Maximum allowed index exceeded';\n\n// We can't use this feature detection in V8 since it causes\n// deoptimization and serious performance degradation\n// https://github.com/zloirock/core-js/issues/679\nvar IS_CONCAT_SPREADABLE_SUPPORT = V8_VERSION >= 51 || !fails(function () {\n  var array = [];\n  array[IS_CONCAT_SPREADABLE] = false;\n  return array.concat()[0] !== array;\n});\n\nvar SPECIES_SUPPORT = arrayMethodHasSpeciesSupport('concat');\n\nvar isConcatSpreadable = function (O) {\n  if (!isObject(O)) return false;\n  var spreadable = O[IS_CONCAT_SPREADABLE];\n  return spreadable !== undefined ? !!spreadable : isArray(O);\n};\n\nvar FORCED = !IS_CONCAT_SPREADABLE_SUPPORT || !SPECIES_SUPPORT;\n\n// `Array.prototype.concat` method\n// https://tc39.github.io/ecma262/#sec-array.prototype.concat\n// with adding support of @@isConcatSpreadable and @@species\n$({ target: 'Array', proto: true, forced: FORCED }, {\n  concat: function concat(arg) { // eslint-disable-line no-unused-vars\n    var O = toObject(this);\n    var A = arraySpeciesCreate(O, 0);\n    var n = 0;\n    var i, k, length, len, E;\n    for (i = -1, length = arguments.length; i < length; i++) {\n      E = i === -1 ? O : arguments[i];\n      if (isConcatSpreadable(E)) {\n        len = toLength(E.length);\n        if (n + len > MAX_SAFE_INTEGER) throw TypeError(MAXIMUM_ALLOWED_INDEX_EXCEEDED);\n        for (k = 0; k < len; k++, n++) if (k in E) createProperty(A, n, E[k]);\n      } else {\n        if (n >= MAX_SAFE_INTEGER) throw TypeError(MAXIMUM_ALLOWED_INDEX_EXCEEDED);\n        createProperty(A, n++, E);\n      }\n    }\n    A.length = n;\n    return A;\n  }\n});\n","//https://docs.inrupt.com/client-libraries/solid-client-js/tutorial/manage-access-control-list.html\nimport {\n  getSolidDatasetWithAcl,\n  getPublicAccess,\n  hasResourceAcl,\n  hasFallbackAcl,\n  hasAccessibleAcl,\n  //createAcl,\n  createAclFromFallbackAcl,\n  getResourceAcl,\n  getAgentAccess,\n  //  getAgentAccessAll,\n  //  setAgentResourceAccess,\n  setAgentResourceAccess,\n  setAgentDefaultAccess,\n  setPublicResourceAccess,\n  setPublicDefaultAccess,\n  saveAclFor,\n} from \"@inrupt/solid-client\";\n\nimport { fetchDocument, createDocument } from 'tripledoc';\nimport { schema } from 'rdf-namespaces'\n\nimport auth from 'solid-auth-client';\nconst SolidFileClient = window.SolidFileClient\nconsole.log(\"SFC\", SolidFileClient)\nconst fc = new SolidFileClient(auth)\n\nexport default {\n  created(){\n\n  },\n  methods: {\n    async configureInbox(inbox_url, webId){\n      console.log(\"configureInbox\",inbox_url, webId,this.storage)\n      let inbox_log_file = this.storage+\"popock/inbox_log.ttl\"\n      let inbox_exists = await fc.itemExists(inbox_url)\n      if (!inbox_exists){\n        await fc.createFolder(inbox_url)\n      }\n\n\n      let logDoc ={}\n      try{\n        logDoc = await fetchDocument(inbox_log_file);\n      } catch(e){\n        logDoc = await createDocument(inbox_log_file);\n        let s = logDoc.addSubject()\n        s.addNodeRef(schema.about, \"init\")\n        //  console.log(logDoc)\n        await logDoc.save()\n      }\n\n\n\n\n\n\n      try{\n        const inboxtWithAcl = await getSolidDatasetWithAcl(inbox_url);\n        const agentAccess = getAgentAccess(inboxtWithAcl, webId);\n        const publicAccess = getPublicAccess(inboxtWithAcl);\n        if(agentAccess == null){\n          alert (\"Are you sure that you have allowed me to 'CONTROL' your POD, I can't read Acl of \"+inbox_url+\". I got a NULL value !! Please check your POD / Preferences / Trusted Application. \")\n        }\n\n        /*  if( !(await fc.itemExists(inbox_log_file)) ) {\n        console.log(\"creation:\",inbox_log_file)\n        await fc.postFile( inbox_log_file, \" \", \"text/turtle\") // only create if it doesn't already exist\n      }*/\n\n\n\n\n\n      console.log(\"inbox_url: \", inbox_url, \"inbox_exists: \", inbox_exists, \"agentAcces: \", agentAccess, \"publicAccess:\", publicAccess )\n      let inbox_log_file_exists = await fc.itemExists(inbox_log_file)\n      console.log(\"inbox_log_file_exists:\", inbox_log_file_exists)\n\n\n\n      let resourceAcl;\n      if (!hasResourceAcl(inboxtWithAcl)) {\n        if (!hasAccessibleAcl(inboxtWithAcl)) {\n          throw new Error(\n            \"The current user does not have permission to change access rights to this Resource.\"\n          );\n        }\n        if (!hasFallbackAcl(inboxtWithAcl)) {\n          throw new Error(\n            \"The current user does not have permission to see who currently has access to this Resource.\"\n          );\n          // Alternatively, initialise a new empty ACL as follows,\n          // but be aware that if you do not give someone Control access,\n          // **nobody will ever be able to change Access permissions in the future**:\n          // resourceAcl = createAcl(myDatasetWithAcl);\n        }\n        resourceAcl = createAclFromFallbackAcl(inboxtWithAcl);\n      } else {\n        resourceAcl = getResourceAcl(inboxtWithAcl);\n      }\n\n\n      const updatedAgentResourceAccess = setAgentResourceAccess(\n        resourceAcl,\n        webId,\n        { read: true, append: true, write: true, control: true },\n      );\n      const updatedAgentDefaultAccess = setAgentDefaultAccess(\n        resourceAcl,\n        webId,\n        { read: true, append: true, write: true, control: true },\n      );\n      const updatedPublicResourceAccess = setPublicResourceAccess(\n        resourceAcl,\n        { read: true, append: true, write: false, control: false },\n      );\n      const updatedPublicDefaultAccess = setPublicDefaultAccess(\n        resourceAcl,\n        { read: false, append: true, write: false, control: false },\n      );\n\n      //    console.log(\"DOSSIER, EVERYONE POSTER, DEFAULT EVERYONE SUBMITTERS\",updatedAgentResourceAccess, updatedAgentResourceAccess)\n      try{\n        // Now save the ACL:\n        await saveAclFor(inboxtWithAcl, updatedAgentResourceAccess);\n        console.log(\"owner Resource\")\n      }catch(e){\n        console.log(\"todo if 409 conflict : must test if ok before patch\" /*,e*/)          }\n        try{\n          await saveAclFor(inboxtWithAcl, updatedAgentDefaultAccess);\n          console.log(\"owner default\")\n        }catch(e){\n          console.log(\"todo if 409 conflict : must test if ok before patch\" /*,e*/)          }\n          try{\n            await saveAclFor(inboxtWithAcl, updatedPublicResourceAccess);\n            console.log(\"posters Resource\")\n          }catch(e){\n            console.log(\"todo if 409 conflict : must test if ok before patch\" /*,e*/)\n          }\n          try{\n            await saveAclFor(inboxtWithAcl, updatedPublicDefaultAccess);\n            console.log(\"submitters Default\")\n\n          }catch(e){\n            console.log(\"todo if 409 conflict : must test if ok before patch\" /*,e*/)\n          }\n\n\n          const logFileWithAcl = await getSolidDatasetWithAcl(inbox_log_file);\n\n          let logAcl;\n          if (!hasResourceAcl(logFileWithAcl)) {\n            if (!hasAccessibleAcl(logFileWithAcl)) {\n              throw new Error(\n                \"The current user does not have permission to change access rights to this Resource.\"\n              );\n            }\n            if (!hasFallbackAcl(logFileWithAcl)) {\n              throw new Error(\n                \"The current user does not have permission to see who currently has access to this Resource.\"\n              );\n              // Alternatively, initialise a new empty ACL as follows,\n              // but be aware that if you do not give someone Control access,\n              // **nobody will ever be able to change Access permissions in the future**:\n              // resourceAcl = createAcl(myDatasetWithAcl);\n            }\n            logAcl = createAclFromFallbackAcl(logFileWithAcl);\n          } else {\n            logAcl = getResourceAcl(logFileWithAcl);\n          }\n\n          console.log(\"Log acl\", logAcl)\n          const updatedPublicLogAccess = setPublicResourceAccess(\n            logAcl,\n            { read: true, append: true, write: false, control: false },\n          );\n          //    try{\n          await saveAclFor(logFileWithAcl, updatedPublicLogAccess);\n          console.log(\"logfile Default\")\n\n          //  }catch(e){\n          //  console.log(\"todo if 409 conflict : must test if ok before patch\" /*,e*/)\n          //}\n\n\n\n          //console.log(\"just for block\",inboxtWithAcl, updatedAcl,saveAclFor);\n\n\n\n        }catch(e){\n          alert(e)\n        }\n\n        // cleaning for debug\n        //await fc.deleteFile(inbox_log_file)\n\n\n\n      },\n\n    }\n  }\n"],"sourceRoot":""}